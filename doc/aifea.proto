syntax = "proto3";
option go_package = "../biz";

/**
生成go代码：
protoc --go_out=../biz --go_opt=paths=source_relative --go-grpc_out=../biz --go-grpc_opt=paths=source_relative aifea.proto

生成python代码
python -m grpc_tools.protoc -I. --python_out=. --pyi_out=. --grpc_python_out=. aifea.proto
 */

service FeaFeeder {
  rpc SubFeatures(SubReq) returns (stream ArrMap) {}
}

message SubReq {
  string exchange = 1;
  string market = 2;
  repeated string codes = 3;
  int64 start = 4;
  int64 end = 5;
  string task = 6;
  int32 sample = 7;
}

service AInfer {
  rpc Trend(ArrMap) returns (ArrMap) {}
  rpc Trade(ArrMap) returns (ArrMap) {}
}

message ArrMap{
  repeated string codes = 1;
  map<string, NumArr> mats = 2;
}

message NumArr {
  repeated double data = 1;
  repeated int32 shape = 2;
}